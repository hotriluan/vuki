name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci --ignore-scripts
      - uses: wagoid/commitlint-github-action@v6
        with:
          configFile: commitlint.config.cjs

  lint_unit:
    name: Lint & Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Lint
        run: npm run lint
      - name: Unit tests (coverage)
        run: npm run test:unit
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: coverage

  integration:
    name: Integration Tests (MySQL)
    runs-on: ubuntu-latest
    needs: lint_unit
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: vuki
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: npm
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Wait for MySQL
        run: |
          for i in {1..12}; do
            if mysql -h 127.0.0.1 -uroot -proot -e 'SELECT 1' >/dev/null 2>&1; then echo 'MySQL up'; break; fi; echo 'wait mysql'; sleep 5; done
          mysql -h 127.0.0.1 -uroot -proot -e 'SHOW DATABASES;' || { echo 'mysql failed'; exit 1; }
      - name: Prepare env
        run: |
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/vuki" >> $GITHUB_ENV
          echo "SKIP_INTEGRATION=" >> $GITHUB_ENV
      - name: Prisma generate
        run: npx prisma generate
      - name: Migrate deploy
        run: npx prisma migrate deploy
      - name: Seed (best effort)
        run: npm run db:seed || echo 'seed failed'
      - name: Integration tests
        run: npm run test:integration
      - name: Upload integration coverage (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration
          path: coverage

  aggregate_coverage:
    name: Aggregate Coverage & Upload
    runs-on: ubuntu-latest
    needs: [lint_unit, integration]
    steps:
      - uses: actions/checkout@v4
      - name: Download unit coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-unit
          path: coverage-unit
      - name: Download integration coverage
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: coverage-integration
          path: coverage-integration
      - name: Merge coverage (simple overwrite if tool not configured)
        run: |
          mkdir combined || true
          cp -r coverage-unit/* combined/ || true
          cp -r coverage-integration/* combined/ || true
          if [ -f combined/lcov.info ]; then echo 'lcov present'; fi
      - name: Upload to Codecov
        if: success() || failure()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: combined/lcov.info
          verbose: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint_unit]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: npm
      - run: npm ci --no-audit --no-fund
      - run: npm run build
      - name: Upload build cache (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next

  preview-size:
    name: Bundle Size Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Restore Next build cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('package-lock.json', 'next.config.mjs') }}
          restore-keys: |
            next-cache-

      - name: Build (analyze)
        run: ANALYZE=1 npm run build

      - name: Generate bundle size summary
        run: node scripts/print-bundle-size.mjs

      - name: Upload bundle summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: bundle-size-summary
          path: bundle-size-summary.json

      - name: Comment bundle size on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summaryPath = 'bundle-size-summary.json';
            if (!fs.existsSync(summaryPath)) {
              core.warning('KhÃ´ng tÃ¬m tháº¥y bundle-size-summary.json');
              return;
            }
            const data = JSON.parse(fs.readFileSync(summaryPath, 'utf8'));
            const lines = [];
            lines.push('### ðŸ“¦ Bundle Size Summary');
            lines.push('\nTá»•ng dung lÆ°á»£ng JS: **' + data.totalHuman + '** (' + data.fileCount + ' files)');
            lines.push('\nTop 5 file lá»›n nháº¥t:');
            data.top.forEach(t => { lines.push(`- ${t.file} : ${t.human}`); });
            lines.push('\n<sub>Generated by CI preview-size job</sub>');
            const body = lines.join('\n');
            // TÃ¬m comment cÅ© (náº¿u cÃ³) Ä‘á»ƒ cáº­p nháº­t thay vÃ¬ táº¡o má»›i
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const marker = 'ðŸ“¦ Bundle Size Summary';
            const existing = comments.find(c => c.user.type === 'Bot' && c.body && c.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }
